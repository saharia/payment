{"version":3,"sources":["../../../src/jwt/strategy/user-login.strategy.ts"],"sourcesContent":["import { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { lastValueFrom } from 'rxjs';\nimport * as bcrypt from 'bcrypt';\nimport { RpcException } from '@nestjs/microservices';\n\n@Injectable()\nexport class JwtUserLoginStrategy extends PassportStrategy(Strategy, 'userLogin') {\n\n  @Inject('NAT_SERVICE')\n  protected readonly client: ClientProxy;\n  \n  constructor() {\n    console.log(\"validate\")\n    super({ usernameField : 'email' });\n  }\n\n  async validate(email: string, password: string): Promise<any> {\n    // console.log(\"Login user strategy\", email, password)\n    // const user = await this.authService.validateUser(email, password);\n    // const record = this.natService.bindMicroServiceHeader(context, { id });\n    const user = await lastValueFrom(this.client.send('auth.findUserByEmail', { data: { email } }));\n    if (user) {\n      const isMatch = await bcrypt.compare(password, user.password);\n      if(isMatch) {\n        const { password, ...result } = user;\n        return result;\n      } else {\n        throw new UnauthorizedException();\n      }\n    } else {\n      throw new RpcException(\"User not found\");\n    }\n  }\n}"],"names":["JwtUserLoginStrategy","PassportStrategy","Strategy","validate","email","password","user","lastValueFrom","client","send","data","isMatch","bcrypt","compare","result","UnauthorizedException","RpcException","constructor","console","log","usernameField","Inject","Injectable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BASaA;;;eAAAA;;;wBAT6C;+BAC9B;0BACK;+BACR;sBACK;gEACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIjB,IAAA,AAAMA,uBAAN,MAAMA,6BAA6BC,IAAAA,0BAAgB,EAACC,uBAAQ,EAAE;IAUnE,MAAMC,SAASC,KAAa,EAAEC,QAAgB,EAAgB;QAC5D,sDAAsD;QACtD,qEAAqE;QACrE,0EAA0E;QAC1E,MAAMC,OAAO,MAAMC,IAAAA,mBAAa,EAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,wBAAwB;YAAEC,MAAM;gBAAEN;YAAM;QAAE;QAC5F,IAAIE,MAAM;YACR,MAAMK,UAAU,MAAMC,QAAOC,OAAO,CAACR,UAAUC,KAAKD,QAAQ;YAC5D,IAAGM,SAAS;gBACV,MAAM,EAAEN,QAAQ,EAAE,GAAGS,QAAQ,GAAGR;gBAChC,OAAOQ;YACT,OAAO;gBACL,MAAM,IAAIC,6BAAqB;YACjC;QACF,OAAO;YACL,MAAM,IAAIC,2BAAY,CAAC;QACzB;IACF;IArBAC,aAAc;QACZC,QAAQC,GAAG,CAAC;QACZ,KAAK,CAAC;YAAEC,eAAgB;QAAQ;IAClC;AAmBF;;IAzBGC,IAAAA,cAAM,EAAC;uCACmB,0BAAW,4BAAX,0BAAW;GAH3BrB;AAAAA;IADZsB,IAAAA,kBAAU;;;GACEtB"}