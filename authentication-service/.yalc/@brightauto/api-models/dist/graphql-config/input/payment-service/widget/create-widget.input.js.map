{"version":3,"sources":["../../../../../src/graphql-config/input/payment-service/widget/create-widget.input.ts"],"sourcesContent":["import { Field, InputType } from \"@nestjs/graphql\";\nimport { Type } from \"class-transformer\";\nimport { ArrayMinSize, IsArray, IsEnum, IsNotEmpty, IsString, ValidateNested } from \"class-validator\";\nimport { PaymentMode } from \"../../../../orm-config/entity/enum/payment-mode\";\nimport { PaymentType } from \"../../../../orm-config/entity/enum/payment-type\";\nimport { PaymentGateway } from \"../../../../orm-config/entity/payment/payment-gateway.entity\";\nimport { RelationExists } from \"../../../../validation/custom/relation-exists/relation-exists.decorator\";\nimport { ValidateIf } from \"../../../../validation/validate-if/validate-if.decorator\";\nimport { PaypalSubscriptionInput } from \"../payment/paypal-subscription.input\";\nimport { RazorpaySubscriptionInput } from \"../payment/razorpay-subscription.input\";\nimport { StripeSubscriptionInput } from \"../payment/stripe-subscription.input\";\n\n\n@InputType()\nexport class CreateWidgetInput {\n\n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Field(() => PaymentMode)\n  @IsEnum(PaymentMode)\n  paymentMode: PaymentMode;\n\n  @Field(() => PaymentType)\n  @IsEnum(PaymentType)\n  paymentType: PaymentType;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  planName: string;\n\n  @Field(() => [String])\n  @IsArray()\n  @ArrayMinSize(1)\n  @RelationExists(PaymentGateway)\n  paymentGatewayIds: string[];\n\n  /* Paypal subscription input */\n  @Field(() => PaypalSubscriptionInput, { nullable: true })\n  @Type(() => PaypalSubscriptionInput)\n  @ValidateIf([ 'paypal' ])\n  @ValidateNested()\n  paypalSubscription: PaypalSubscriptionInput;\n\n  /* Stripe subscription input */\n  @Field(() => StripeSubscriptionInput, { nullable: true })\n  @ValidateIf([ 'stripe' ])\n  @Type(() => StripeSubscriptionInput)\n  @ValidateNested()\n  stripeSubscription: StripeSubscriptionInput;\n\n  /* Razorpay subscription input */\n  @Field(() => RazorpaySubscriptionInput, { nullable: true })\n  @ValidateIf([ 'razorpay' ])\n  @Type(() => RazorpaySubscriptionInput)\n  @ValidateNested()\n  razorpaySubscription: RazorpaySubscriptionInput;\n\n}\n"],"names":["CreateWidgetInput","Field","String","IsNotEmpty","IsString","PaymentMode","IsEnum","PaymentType","IsArray","ArrayMinSize","RelationExists","PaymentGateway","PaypalSubscriptionInput","nullable","Type","ValidateIf","ValidateNested","StripeSubscriptionInput","RazorpaySubscriptionInput","InputType"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcaA;;;eAAAA;;;yBAdoB;kCACZ;gCAC+D;6BACxD;6BACA;sCACG;yCACA;qCACJ;yCACa;2CACE;yCACF;;;;;;;;;;AAIjC,IAAA,AAAMA,oBAAN,MAAMA;AA+Cb;;IA7CGC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;;GAJEJ;;IAOVC,IAAAA,cAAK,EAAC,IAAMI,wBAAW;IACvBC,IAAAA,sBAAM,EAACD,wBAAW;uCACN,wBAAW,4BAAX,wBAAW;GATbL;;IAWVC,IAAAA,cAAK,EAAC,IAAMM,wBAAW;IACvBD,IAAAA,sBAAM,EAACC,wBAAW;uCACN,wBAAW,4BAAX,wBAAW;GAbbP;;IAeVC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;;GAjBEJ;;IAoBVC,IAAAA,cAAK,EAAC,IAAM;YAACC;SAAO;IACpBM,IAAAA,uBAAO;IACPC,IAAAA,4BAAY,EAAC;IACbC,IAAAA,uCAAc,EAACC,oCAAc;;GAvBnBX;;IA2BVC,IAAAA,cAAK,EAAC,IAAMW,gDAAuB,EAAE;QAAEC,UAAU;IAAK;IACtDC,IAAAA,sBAAI,EAAC,IAAMF,gDAAuB;IAClCG,IAAAA,+BAAU,EAAC;QAAE;KAAU;IACvBC,IAAAA,8BAAc;uCACK,gDAAuB,4BAAvB,gDAAuB;GA/BhChB;;IAkCVC,IAAAA,cAAK,EAAC,IAAMgB,gDAAuB,EAAE;QAAEJ,UAAU;IAAK;IACtDE,IAAAA,+BAAU,EAAC;QAAE;KAAU;IACvBD,IAAAA,sBAAI,EAAC,IAAMG,gDAAuB;IAClCD,IAAAA,8BAAc;uCACK,gDAAuB,4BAAvB,gDAAuB;GAtChChB;;IAyCVC,IAAAA,cAAK,EAAC,IAAMiB,oDAAyB,EAAE;QAAEL,UAAU;IAAK;IACxDE,IAAAA,+BAAU,EAAC;QAAE;KAAY;IACzBD,IAAAA,sBAAI,EAAC,IAAMI,oDAAyB;IACpCF,IAAAA,8BAAc;uCACO,oDAAyB,4BAAzB,oDAAyB;GA7CpChB;AAAAA;IADZmB,IAAAA,kBAAS;GACGnB"}