{"version":3,"sources":["../../../../../src/graphql-config/input/payment-service/gateway/create-payment-gateway.input.ts"],"sourcesContent":["import { Field, InputType } from \"@nestjs/graphql\";\nimport { Type } from \"class-transformer\";\nimport { IsArray, IsNotEmpty, IsString, IsUrl, MinLength, ValidateNested } from \"class-validator\";\nimport { PaymentGateway } from \"../../../../orm-config/entity/payment/payment-gateway.entity\";\nimport { ColumnExists } from \"../../../../validation/custom/column-exists/column-exists.decorator\";\nimport { PaymentGatewayPlanInput } from \"../gateway-plan/payment-gateway-plan.input\";\nimport { IsUniqeArrayObjets } from \"../../../../validation\";\n\n\n@InputType()\nexport class CreatePaymentGatewayInput {\n\n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @ColumnExists(PaymentGateway)\n  name: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  @IsUrl()\n  @ColumnExists(PaymentGateway)\n  apiSandboxTokenUrl: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  @IsUrl()\n  @ColumnExists(PaymentGateway)\n  apiSandboxPaymentUrl: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  @IsUrl()\n  @ColumnExists(PaymentGateway)\n  apiTokenUrl: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  @IsUrl()\n  @ColumnExists(PaymentGateway)\n  apiPaymentUrl: string;\n\n  @Field(() => [PaymentGatewayPlanInput])\n  @ValidateNested({ each: true })\n  @IsUniqeArrayObjets('paymentPlan.id')\n  @IsArray()\n  @Type(() => PaymentGatewayPlanInput)\n  paymentGatewayPlans: PaymentGatewayPlanInput[];\n\n}\n"],"names":["CreatePaymentGatewayInput","Field","String","IsNotEmpty","IsString","MinLength","ColumnExists","PaymentGateway","IsUrl","PaymentGatewayPlanInput","ValidateNested","each","IsUniqeArrayObjets","IsArray","Type","InputType"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAUaA;;;eAAAA;;;yBAVoB;kCACZ;gCAC2D;sCACjD;uCACF;yCACW;4BACL;;;;;;;;;;AAI5B,IAAA,AAAMA,4BAAN,MAAMA;AA4Cb;;IA1CGC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;IACRC,IAAAA,yBAAS,EAAC;IACVC,IAAAA,mCAAY,EAACC,oCAAc;;GANjBP;;IASVC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;IACRI,IAAAA,qBAAK;IACLF,IAAAA,mCAAY,EAACC,oCAAc;;GAbjBP;;IAgBVC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;IACRI,IAAAA,qBAAK;IACLF,IAAAA,mCAAY,EAACC,oCAAc;;GApBjBP;;IAuBVC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;IACRI,IAAAA,qBAAK;IACLF,IAAAA,mCAAY,EAACC,oCAAc;;GA3BjBP;;IA8BVC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;IACRI,IAAAA,qBAAK;IACLF,IAAAA,mCAAY,EAACC,oCAAc;;GAlCjBP;;IAqCVC,IAAAA,cAAK,EAAC,IAAM;YAACQ,gDAAuB;SAAC;IACrCC,IAAAA,8BAAc,EAAC;QAAEC,MAAM;IAAK;IAC5BC,IAAAA,8BAAkB,EAAC;IACnBC,IAAAA,uBAAO;IACPC,IAAAA,sBAAI,EAAC,IAAML,gDAAuB;;GAzCxBT;AAAAA;IADZe,IAAAA,kBAAS;GACGf"}