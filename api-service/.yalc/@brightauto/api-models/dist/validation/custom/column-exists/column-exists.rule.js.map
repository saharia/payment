{"version":3,"sources":["../../../../src/validation/custom/column-exists/column-exists.rule.ts"],"sourcesContent":["import { Injectable } from \"@nestjs/common\";\nimport { ValidationArguments, ValidatorConstraint, ValidatorConstraintInterface } from \"class-validator\";\nimport { DataSource, ILike, Not } from \"typeorm\";\n\n@ValidatorConstraint({ name: 'ColumnExists', async: true })\n@Injectable()\nexport class ColumnExistsRule implements ValidatorConstraintInterface {\n  constructor(private dataSource: DataSource) {}\n\n  async validate(value: any, args: ValidationArguments) {\n    try {\n      const [model] = args.constraints;\n      const input = (args.object as any);\n      const columnName = args.property as string;\n      const id: string = input['id'];\n      let query = {};\n      query[columnName] = ILike(value); \n      if(id) {\n        query['id'] = Not(id);\n      }\n      await this.dataSource.getRepository(model).findOneByOrFail(query);\n    } catch (e) {\n      // console.log(e)\n      return true;\n    }\n\n    return false;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return `${args.property} already exists!`;\n  }\n}"],"names":["ColumnExistsRule","validate","value","args","model","constraints","input","object","columnName","property","id","query","ILike","Not","dataSource","getRepository","findOneByOrFail","e","defaultMessage","constructor","ValidatorConstraint","name","async","Injectable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAMaA;;;eAAAA;;;wBANc;gCAC4D;yBAChD;;;;;;;;;;AAIhC,IAAA,AAAMA,mBAAN,MAAMA;IAGX,MAAMC,SAASC,KAAU,EAAEC,IAAyB,EAAE;QACpD,IAAI;YACF,MAAM,CAACC,MAAM,GAAGD,KAAKE,WAAW;YAChC,MAAMC,QAASH,KAAKI,MAAM;YAC1B,MAAMC,aAAaL,KAAKM,QAAQ;YAChC,MAAMC,KAAaJ,KAAK,CAAC,KAAK;YAC9B,IAAIK,QAAQ,CAAC;YACbA,KAAK,CAACH,WAAW,GAAGI,IAAAA,cAAK,EAACV;YAC1B,IAAGQ,IAAI;gBACLC,KAAK,CAAC,KAAK,GAAGE,IAAAA,YAAG,EAACH;YACpB;YACA,MAAM,IAAI,CAACI,UAAU,CAACC,aAAa,CAACX,OAAOY,eAAe,CAACL;QAC7D,EAAE,OAAOM,GAAG;YACV,iBAAiB;YACjB,OAAO;QACT;QAEA,OAAO;IACT;IAEAC,eAAef,IAAyB,EAAE;QACxC,OAAO,CAAC,EAAEA,KAAKM,QAAQ,CAAC,gBAAgB,CAAC;IAC3C;IAxBAU,YAAY,AAAQL,UAAsB,CAAE;aAAxBA,aAAAA;IAAyB;AAyB/C;AA1Bad;IAFZoB,IAAAA,mCAAmB,EAAC;QAAEC,MAAM;QAAgBC,OAAO;IAAK;IACxDC,IAAAA,kBAAU;;;eAEuB,mBAAU,4BAAV,mBAAU;;GAD/BvB"}