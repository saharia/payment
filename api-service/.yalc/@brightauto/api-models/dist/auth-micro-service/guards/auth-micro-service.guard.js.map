{"version":3,"sources":["../../../src/auth-micro-service/guards/auth-micro-service.guard.ts"],"sourcesContent":["import { ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ExecutionContextHost } from '@nestjs/core/helpers/execution-context-host';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AuthMicroServiceGuard extends AuthGuard([ 'jwtAuthMicroService' ]) {\n\n  canActivate(context: ExecutionContext) {\n    // console.log(context.switchToRpc().getContext());\n    return super.canActivate(new ExecutionContextHost([context.switchToRpc().getContext()]));\n  }\n\n  handleRequest(err: any, user: any) {\n    /* console.log(\"user ==>\", user);\n    console.log(\"error ==>\", err); */\n    if (err || !user) {\n      // throw err || new AuthenticationError('GqlAuthGuard');\n      throw err || new UnauthorizedException()\n    }\n    return user;\n  }\n\n}\n"],"names":["AuthMicroServiceGuard","AuthGuard","canActivate","context","ExecutionContextHost","switchToRpc","getContext","handleRequest","err","user","UnauthorizedException","Injectable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAKaA;;;eAAAA;;;wBALuD;sCAC/B;0BACX;;;;;;;AAGnB,IAAA,AAAMA,wBAAN,MAAMA,8BAA8BC,IAAAA,mBAAS,EAAC;IAAE;CAAuB;IAE5EC,YAAYC,OAAyB,EAAE;QACrC,mDAAmD;QACnD,OAAO,KAAK,CAACD,YAAY,IAAIE,0CAAoB,CAAC;YAACD,QAAQE,WAAW,GAAGC,UAAU;SAAG;IACxF;IAEAC,cAAcC,GAAQ,EAAEC,IAAS,EAAE;QACjC;mCAC+B,GAC/B,IAAID,OAAO,CAACC,MAAM;YAChB,wDAAwD;YACxD,MAAMD,OAAO,IAAIE,6BAAqB;QACxC;QACA,OAAOD;IACT;AAEF;AAjBaT;IADZW,IAAAA,kBAAU;GACEX"}