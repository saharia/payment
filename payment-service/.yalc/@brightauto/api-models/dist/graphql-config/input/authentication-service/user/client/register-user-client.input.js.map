{"version":3,"sources":["../../../../../../src/graphql-config/input/authentication-service/user/client/register-user-client.input.ts"],"sourcesContent":["import { Field, InputType } from \"@nestjs/graphql\";\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from \"class-validator\";\nimport { User } from \"../../../../../orm-config/entity/authentication/user.entity\";\nimport { ColumnExists } from \"../../../../../validation/custom/column-exists/column-exists.decorator\";\nimport { Match } from \"../../../../../validation/custom/match/match.validate\";\n\n\n@InputType()\nexport class RegisterUserClientInput {\n\n  @Field(() => String)\n  @IsEmail()\n  @IsNotEmpty()\n  @ColumnExists(User)\n  email: string;\n  \n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n  \n  @Field(() => String)\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n  \n  @Field(() => String)\n  @MinLength(5)\n  @IsNotEmpty()\n  password: string;\n\n  @Field(() => String)\n  @IsString()\n  @MinLength(5)\n  @Match('password')\n  passwordConfirm: string;\n\n}\n"],"names":["RegisterUserClientInput","Field","String","IsEmail","IsNotEmpty","ColumnExists","User","IsString","MinLength","Match","InputType"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAQaA;;;eAAAA;;;yBARoB;gCACwB;4BACpC;uCACQ;+BACP;;;;;;;;;;AAIf,IAAA,AAAMA,0BAAN,MAAMA;AA6Bb;;IA3BGC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,uBAAO;IACPC,IAAAA,0BAAU;IACVC,IAAAA,mCAAY,EAACC,gBAAI;;GALPN;;IAQVC,IAAAA,cAAK,EAAC,IAAMC;IACZE,IAAAA,0BAAU;IACVG,IAAAA,wBAAQ;;GAVEP;;IAaVC,IAAAA,cAAK,EAAC,IAAMC;IACZE,IAAAA,0BAAU;IACVG,IAAAA,wBAAQ;;GAfEP;;IAkBVC,IAAAA,cAAK,EAAC,IAAMC;IACZM,IAAAA,yBAAS,EAAC;IACVJ,IAAAA,0BAAU;;GApBAJ;;IAuBVC,IAAAA,cAAK,EAAC,IAAMC;IACZK,IAAAA,wBAAQ;IACRC,IAAAA,yBAAS,EAAC;IACVC,IAAAA,oBAAK,EAAC;;GA1BIT;AAAAA;IADZU,IAAAA,kBAAS;GACGV"}