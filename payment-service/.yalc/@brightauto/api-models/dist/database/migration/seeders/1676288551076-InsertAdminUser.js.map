{"version":3,"sources":["../../../../src/database/migration/seeders/1676288551076-InsertAdminUser.ts"],"sourcesContent":["import { values } from 'lodash';\nimport { allActions } from '../../../common/constant/action';\nimport { MigrationInterface, QueryRunner } from \"typeorm\";\nimport { allRoles } from \"../../../common\";\nimport { users } from \"../../../common/constant/user\";\nimport { Action, Role, User } from \"../../../orm-config\";\n\nexport class InsertAdminUser1676288551076 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise<void> {\n\n      try {\n\n        // lets now open a new transaction:\n        await queryRunner.startTransaction();\n\n        console.log(\"Create new admin user details -->\");\n        /* Create roles */\n        if(values(allRoles).length) {\n          const roleEntities = await queryRunner.manager.create(Role, values(allRoles));\n          await queryRunner.manager.save(roleEntities);\n        }\n\n        /* Create list of actions with corresponding roles */\n        if(allActions.length) {\n          const actionEntities = await queryRunner.manager.create(Action, allActions);\n          await queryRunner.manager.save(actionEntities);\n        }\n\n        /* Create Superadmin, Admin, client user */\n        if(users.length) {\n          const userEntities = await queryRunner.manager.create(User, users);\n          await queryRunner.manager.save(userEntities);\n        }\n\n        // commit transaction now:\n        await queryRunner.commitTransaction();\n\n      } catch (error) {\n        // since we have errors let's rollback changes we made\n        await queryRunner.rollbackTransaction();\n        throw error;\n      } finally {\n        // you need to release query runner which is manually created:\n        // await queryRunner.release();\n      }\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n    }\n\n}\n"],"names":["InsertAdminUser1676288551076","up","queryRunner","startTransaction","console","log","values","allRoles","length","roleEntities","manager","create","Role","save","allActions","actionEntities","Action","users","userEntities","User","commitTransaction","error","rollbackTransaction","down"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAOaA;;;eAAAA;;;wBAPU;wBACI;wBAEF;sBACH;2BACa;AAE5B,IAAA,AAAMA,+BAAN,MAAMA;IAET,MAAaC,GAAGC,WAAwB,EAAiB;QAEvD,IAAI;YAEF,mCAAmC;YACnC,MAAMA,YAAYC,gBAAgB;YAElCC,QAAQC,GAAG,CAAC;YACZ,gBAAgB,GAChB,IAAGC,IAAAA,cAAM,EAACC,gBAAQ,EAAEC,MAAM,EAAE;gBAC1B,MAAMC,eAAe,MAAMP,YAAYQ,OAAO,CAACC,MAAM,CAACC,eAAI,EAAEN,IAAAA,cAAM,EAACC,gBAAQ;gBAC3E,MAAML,YAAYQ,OAAO,CAACG,IAAI,CAACJ;YACjC;YAEA,mDAAmD,GACnD,IAAGK,kBAAU,CAACN,MAAM,EAAE;gBACpB,MAAMO,iBAAiB,MAAMb,YAAYQ,OAAO,CAACC,MAAM,CAACK,iBAAM,EAAEF,kBAAU;gBAC1E,MAAMZ,YAAYQ,OAAO,CAACG,IAAI,CAACE;YACjC;YAEA,yCAAyC,GACzC,IAAGE,WAAK,CAACT,MAAM,EAAE;gBACf,MAAMU,eAAe,MAAMhB,YAAYQ,OAAO,CAACC,MAAM,CAACQ,eAAI,EAAEF,WAAK;gBACjE,MAAMf,YAAYQ,OAAO,CAACG,IAAI,CAACK;YACjC;YAEA,0BAA0B;YAC1B,MAAMhB,YAAYkB,iBAAiB;QAErC,EAAE,OAAOC,OAAO;YACd,sDAAsD;YACtD,MAAMnB,YAAYoB,mBAAmB;YACrC,MAAMD;QACR,SAAU;QACR,8DAA8D;QAC9D,+BAA+B;QACjC;IACF;IAEA,MAAaE,KAAKrB,WAAwB,EAAiB,CAC3D;AAEJ"}