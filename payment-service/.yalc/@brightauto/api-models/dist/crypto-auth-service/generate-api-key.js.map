{"version":3,"sources":["../../src/crypto-auth-service/generate-api-key.ts"],"sourcesContent":["import { createCipheriv, createHash } from 'crypto';\n\nexport function generateApiKey() {\n  const secretKey = (Math.random() + 1).toString(36).substring(7);\n  const secretIV = (Math.random() + 1).toString(36).substring(7);\n  const key = createHash('sha512').update(secretKey, 'utf-8').digest('hex').substring(0, 32);\n  const iv = createHash('sha512').update(secretIV, 'utf-8').digest('hex').substring(0, 16);\n  let cipher = createCipheriv('aes-256-cbc', Buffer.from(key), iv);\n  let encrypted = cipher.update(crypto.randomUUID());\n  encrypted = Buffer.concat([encrypted, cipher.final()]);\n  console.log(encrypted.toString('hex'));\n  return encrypted.toString('hex');\n}"],"names":["generateApiKey","secretKey","Math","random","toString","substring","secretIV","key","createHash","update","digest","iv","cipher","createCipheriv","Buffer","from","encrypted","crypto","randomUUID","concat","final","console","log"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAEgBA;;;eAAAA;;;wBAF2B;AAEpC,SAASA;IACd,MAAMC,YAAY,AAACC,CAAAA,KAAKC,MAAM,KAAK,CAAA,EAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC;IAC7D,MAAMC,WAAW,AAACJ,CAAAA,KAAKC,MAAM,KAAK,CAAA,EAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC;IAC5D,MAAME,MAAMC,IAAAA,kBAAU,EAAC,UAAUC,MAAM,CAACR,WAAW,SAASS,MAAM,CAAC,OAAOL,SAAS,CAAC,GAAG;IACvF,MAAMM,KAAKH,IAAAA,kBAAU,EAAC,UAAUC,MAAM,CAACH,UAAU,SAASI,MAAM,CAAC,OAAOL,SAAS,CAAC,GAAG;IACrF,IAAIO,SAASC,IAAAA,sBAAc,EAAC,eAAeC,OAAOC,IAAI,CAACR,MAAMI;IAC7D,IAAIK,YAAYJ,OAAOH,MAAM,CAACQ,OAAOC,UAAU;IAC/CF,YAAYF,OAAOK,MAAM,CAAC;QAACH;QAAWJ,OAAOQ,KAAK;KAAG;IACrDC,QAAQC,GAAG,CAACN,UAAUZ,QAAQ,CAAC;IAC/B,OAAOY,UAAUZ,QAAQ,CAAC;AAC5B"}