{"version":3,"sources":["../../../src/validation/validate-if/validate-if.decorator.ts"],"sourcesContent":["import { ValidationOptions, registerDecorator } from \"class-validator\";\nimport { PaymentValidateIfRule } from \"./payment/payment-validate-if.rule\";\nimport { WidgetValidateIfRule } from \"./widget/widget-validate-if.rule\";\n\nexport function ValidateIf(model: any, validationOptions?: ValidationOptions) {\n  let rule: any = WidgetValidateIfRule;\n  if(model[1] && model[1] == 'payment') {\n    rule = PaymentValidateIfRule;\n  }\n  return function (object: any, propertyName: string) {\n    registerDecorator({\n      name: 'ValidateIf',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: model,\n      options: validationOptions,\n      validator: rule,\n    });\n  };\n}"],"names":["ValidateIf","model","validationOptions","rule","WidgetValidateIfRule","PaymentValidateIfRule","object","propertyName","registerDecorator","name","target","constructor","constraints","options","validator"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAIgBA;;;eAAAA;;;gCAJqC;uCACf;sCACD;AAE9B,SAASA,WAAWC,KAAU,EAAEC,iBAAqC;IAC1E,IAAIC,OAAYC,0CAAoB;IACpC,IAAGH,KAAK,CAAC,EAAE,IAAIA,KAAK,CAAC,EAAE,IAAI,WAAW;QACpCE,OAAOE,4CAAqB;IAC9B;IACA,OAAO,SAAUC,MAAW,EAAEC,YAAoB;QAChDC,IAAAA,iCAAiB,EAAC;YAChBC,MAAM;YACNC,QAAQJ,OAAOK,WAAW;YAC1BJ,cAAcA;YACdK,aAAaX;YACbY,SAASX;YACTY,WAAWX;QACb;IACF;AACF"}