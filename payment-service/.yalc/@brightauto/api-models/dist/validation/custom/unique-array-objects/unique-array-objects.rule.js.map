{"version":3,"sources":["../../../../src/validation/custom/unique-array-objects/unique-array-objects.rule.ts"],"sourcesContent":["import { ValidationArguments, ValidatorConstraint, ValidatorConstraintInterface } from \"class-validator\";\nimport { map, countBy, pickBy, keys } from 'lodash';\n@ValidatorConstraint({ name: 'UniqueArrayObjects', async: true })\nexport class UniqueArrayObjectsRule implements ValidatorConstraintInterface {\n  constructor() {}\n\n  async validate(value: any, args: ValidationArguments) {\n    try {\n      const column = args.constraints[0];\n      const ids = map(args.value, column);\n      const counts = countBy(ids);\n      const duplicates = pickBy(counts, count => count > 1);\n      return keys(duplicates).length ? false: true;\n    } catch (e) {\n      // console.log(e)\n      return false;\n    }\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return `${args.constraints[0]} must be unique!`;\n  }\n}"],"names":["UniqueArrayObjectsRule","validate","value","args","column","constraints","ids","map","counts","countBy","duplicates","pickBy","count","keys","length","e","defaultMessage","constructor","ValidatorConstraint","name","async"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAGaA;;;eAAAA;;;gCAH0E;wBAC5C;;;;;;;;;;AAEpC,IAAA,AAAMA,yBAAN,MAAMA;IAGX,MAAMC,SAASC,KAAU,EAAEC,IAAyB,EAAE;QACpD,IAAI;YACF,MAAMC,SAASD,KAAKE,WAAW,CAAC,EAAE;YAClC,MAAMC,MAAMC,IAAAA,WAAG,EAACJ,KAAKD,KAAK,EAAEE;YAC5B,MAAMI,SAASC,IAAAA,eAAO,EAACH;YACvB,MAAMI,aAAaC,IAAAA,cAAM,EAACH,QAAQI,CAAAA,QAASA,QAAQ;YACnD,OAAOC,IAAAA,YAAI,EAACH,YAAYI,MAAM,GAAG,QAAO;QAC1C,EAAE,OAAOC,GAAG;YACV,iBAAiB;YACjB,OAAO;QACT;IACF;IAEAC,eAAeb,IAAyB,EAAE;QACxC,OAAO,CAAC,EAAEA,KAAKE,WAAW,CAAC,EAAE,CAAC,gBAAgB,CAAC;IACjD;IAjBAY,aAAc,CAAC;AAkBjB;AAnBajB;IADZkB,IAAAA,mCAAmB,EAAC;QAAEC,MAAM;QAAsBC,OAAO;IAAK;;;GAClDpB"}