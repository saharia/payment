{"version":3,"sources":["../../../../src/validation/custom/match/match.validate.ts"],"sourcesContent":["import {\n  registerDecorator,\n  ValidationArguments,\n  ValidationOptions\n} from 'class-validator';\n\nexport function Match<T>(\n  property: keyof T,\n  validationOptions?: ValidationOptions,\n) {\n  return (object: any, propertyName: string) => {\n    registerDecorator({\n      name: 'Match',\n      target: object.constructor,\n      propertyName,\n      constraints: [property],\n      options: validationOptions,\n      validator: {\n        validate(value: any, args: ValidationArguments) {\n          const [relatedPropertyName] = args.constraints;\n          const relatedValue = (args.object as any)[relatedPropertyName];\n          return value == relatedValue;\n        },\n\n        defaultMessage(args: ValidationArguments) {\n          const [relatedPropertyName] = args.constraints;\n          return `${propertyName} and ${relatedPropertyName} does not match`;\n        },\n      },\n    });\n  };\n}"],"names":["Match","property","validationOptions","object","propertyName","registerDecorator","name","target","constructor","constraints","options","validator","validate","value","args","relatedPropertyName","relatedValue","defaultMessage"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAMgBA;;;eAAAA;;;gCAFT;AAEA,SAASA,MACdC,QAAiB,EACjBC,iBAAqC;IAErC,OAAO,CAACC,QAAaC;QACnBC,IAAAA,iCAAiB,EAAC;YAChBC,MAAM;YACNC,QAAQJ,OAAOK,WAAW;YAC1BJ;YACAK,aAAa;gBAACR;aAAS;YACvBS,SAASR;YACTS,WAAW;gBACTC,UAASC,KAAU,EAAEC,IAAyB;oBAC5C,MAAM,CAACC,oBAAoB,GAAGD,KAAKL,WAAW;oBAC9C,MAAMO,eAAe,AAACF,KAAKX,MAAM,AAAQ,CAACY,oBAAoB;oBAC9D,OAAOF,SAASG;gBAClB;gBAEAC,gBAAeH,IAAyB;oBACtC,MAAM,CAACC,oBAAoB,GAAGD,KAAKL,WAAW;oBAC9C,OAAO,CAAC,EAAEL,aAAa,KAAK,EAAEW,oBAAoB,eAAe,CAAC;gBACpE;YACF;QACF;IACF;AACF"}