{"version":3,"sources":["../../../../src/orm-config/entity/payment/brand.entity.ts"],"sourcesContent":["import { Field, ObjectType } from \"@nestjs/graphql\";\nimport { BeforeInsert, Column, Entity, ManyToOne, OneToMany, Relation } from \"typeorm\";\nimport { User } from \"../authentication/user.entity\";\nimport { BaseEntityColumn } from \"../base.entity\";\nimport { PaymentMode } from \"../enum/payment-mode\";\nimport { BrandType } from \"../enum/brand-type\";\nimport { PaymentGatewayKey } from \"./payment-gateway-key.entity\";\nimport { generateApiKey } from \"../../../crypto-auth-service/generate-api-key\";\n\n@ObjectType()\n@Entity()\nexport class Brand extends BaseEntityColumn {\n\n  @Field(() => String)\n  @Column({\n    type: \"enum\",\n    enum: BrandType,\n    default: BrandType.WEBSITE\n  })\n  brandType: BrandType;\n\n  @Field(() => String)\n  @Column()\n  name: string;\n\n  @Field(() => String)\n  @Column({\n    type: \"enum\",\n    enum: PaymentMode,\n    default: PaymentMode.SANDBOX\n  })\n  paymentMode: PaymentMode;\n\n  @Field(() => [PaymentGatewayKey])\n  @OneToMany(() => PaymentGatewayKey, (paymentGatewayKey) => paymentGatewayKey.brand, { cascade: true })\n  paymentGatewayKeys: Relation<PaymentGatewayKey>[];\n\n  @Field(() => User)\n  @ManyToOne(() => User, (user) => user.brands)\n  user: Relation<User>;\n\n  @Field(() => String)\n  @Column()\n  apiKey: string;\n\n  @BeforeInsert()\n  async createApiKey() {\n    this.apiKey = generateApiKey();\n  }\n\n}\n"],"names":["Brand","BaseEntityColumn","createApiKey","apiKey","generateApiKey","Field","String","Column","type","enum","BrandType","default","WEBSITE","PaymentMode","SANDBOX","PaymentGatewayKey","OneToMany","paymentGatewayKey","brand","cascade","User","ManyToOne","user","brands","BeforeInsert","ObjectType","Entity"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAWaA;;;eAAAA;;;yBAXqB;yBAC2C;4BACxD;4BACY;6BACL;2BACF;yCACQ;gCACH;;;;;;;;;;AAIxB,IAAA,AAAMA,QAAN,MAAMA,cAAcC,4BAAgB;IAkCzC,MACMC,eAAe;QACnB,IAAI,CAACC,MAAM,GAAGC,IAAAA,8BAAc;IAC9B;AAEF;;IArCGC,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,eAAM,EAAC;QACNC,MAAM;QACNC,MAAMC,oBAAS;QACfC,SAASD,oBAAS,CAACE,OAAO;IAC5B;uCACW,oBAAS,4BAAT,oBAAS;GARTZ;;IAUVK,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,eAAM;;GAXIP;;IAcVK,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,eAAM,EAAC;QACNC,MAAM;QACNC,MAAMI,wBAAW;QACjBF,SAASE,wBAAW,CAACC,OAAO;IAC9B;uCACa,wBAAW,4BAAX,wBAAW;GApBbd;;IAsBVK,IAAAA,cAAK,EAAC,IAAM;YAACU,0CAAiB;SAAC;IAC/BC,IAAAA,kBAAS,EAAC,IAAMD,0CAAiB,EAAE,CAACE,oBAAsBA,kBAAkBC,KAAK,EAAE;QAAEC,SAAS;IAAK;;GAvBzFnB;;IA0BVK,IAAAA,cAAK,EAAC,IAAMe,gBAAI;IAChBC,IAAAA,kBAAS,EAAC,IAAMD,gBAAI,EAAE,CAACE,OAASA,KAAKC,MAAM;uCACtC,iBAAQ,4BAAR,iBAAQ;GA5BHvB;;IA8BVK,IAAAA,cAAK,EAAC,IAAMC;IACZC,IAAAA,eAAM;;GA/BIP;;IAkCVwB,IAAAA,qBAAY;;;;GAlCFxB;AAAAA;IAFZyB,IAAAA,mBAAU;IACVC,IAAAA,eAAM;GACM1B"}